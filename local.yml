---

- hosts: localhost
  connection: local
  become: true

  tasks:

  - name: Update systems
    tags: always
    package:
      update_cache: yes
      upgrade: dist
    when: ansible_distribution in ["Debian", "Ubuntu"]

  - name: Create groups
    tags: always
    ansible.builtin.group:
      name: "{{ item.name }}"
      state: present
      gid: "{{ item.gid }}"
    loop:
      - { name: 'git', gid: 2013 }
      - { name: 'media', gid: 1776 }
      - { name: 'docs', gid: 1787 }

  - name: Create users
    tags: always
    user:
      name: "{{ item.name }}"
      create_home: yes
      shell: /bin/bash
      groups: "{{ item.groups }}"
      append: true
      uid: "{{ item.uid }}"
    loop:
      - { name: 'bill', uid: 1000, groups: 'sudo,adm,root,git,media,docs' }
      - { name: 'hal', uid: 1001, groups: 'sudo,git,media,docs' }
      - { name: 'lily', uid: 1002, groups: 'sudo,docs,media' }
      - { name: 'loretta', uid: 1003, groups: 'sudo,docs,media' }

  - name: Debug user creation
    debug:
      msg: "User {{ item.name }} should be created"
    loop:
      - { name: 'bill' }
      - { name: 'hal' }
      - { name: 'lily' }
      - { name: 'loretta' }

  - name: Add SSH keys
    tags: always
    authorized_key:
      user: "{{ item.user }}"
      key: "{{ item.key }}"
    loop:
      - { user: 'hal', key: '[secret]' }
      - { user: 'bill', key: '[secret]' }

  - name: Add sudoers files
    tags: always
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: root
      group: root
      mode: 0440
    loop:
      - { src: 'files/sudoer_hal', dest: '/etc/sudoers.d/hal' }
      - { src: 'files/sudoer_bill', dest: '/etc/sudoers.d/bill' }

  - name: Install packages
    package:
      name: 
        - htop
        - tmux
        - vim-nox
        - git
        - mc
        - curl
        - keychain
        - python3-psutil
        - nfs-common
        - software-properties-common
        - cmatrix
        - whois

  - name: Copy wallpaper file
    copy:
      src: files/deep_space_wallpaper.avif
      dest: /usr/share/backgrounds/ansible-wallpaper.avif
      owner: root
      group: root

  - name: Set wallpaper for Bill
    become_user: bill
    dconf:
      key: "/org/gnome/desktop/background/picture-uri"
      value: "'file:///usr/share/backgrounds/ansible-wallpaper.avif'"

  - name: Set wallpaper position for Bill
    become_user: bill
    dconf:
      key: "/org/gnome/desktop/background/picture-options"
      value: "'zoom'"

  - name: Copy user photo
    copy:
      src: files/master_yoda.PNG
      dest: "/home/bill/photo.PNG"
      owner: bill
      group: bill
      mode: '0644'

  - name: Register the new user photo
    command: sudo update-alternatives --install /usr/bin/xdmx-user-photo xdmx-user-photo /home/bill/photo.PNG 100
    when: ansible_facts['os_family'] == 'Debian' 

  - name: Set the new user photo as the default
    command: sudo update-alternatives --set xdmx-user-photo /home/bill/photo.PNG
    when: ansible_facts['os_family'] == 'Debian' 

  - name: Copy the user photo to GNOME user settings directory
    copy:
      src: /home/bill/photo.PNG
      dest: /home/bill/.face
      owner: bill
      group: bill
      mode: '0644'

  - name: Copy the user photo to GNOME user settings icon
    copy:
      src: /home/bill/photo.PNG
      dest: /home/bill/.face.icon
      owner: bill
      group: bill
      mode: '0644'

  - name: Set the user photo for Bill using dconf
    community.general.dconf:
      key: /org/gnome/login-screen/logo
      state: present
      value: "'file:///home/bill/photo.PNG'"
    become: false
    become_user: bill

  - name: Add ansible-pull cron job with logging
    cron:
      name: ansible auto-provision
      user: hal
      minute: "*/10"
      job: "ansible-pull -o -U https://github.com/wknight7/auto_cfg.git >> /var/log/ansible-pull.log 2>&1"

  - name: Recursively remove directories
    tags: workstations
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    loop:
      - /home/bill/Music
      - /home/bill/Pictures
      - /home/bill/Templates
      - /home/bill/Videos
      - /home/lily/Music
      - /home/lily/Pictures
      - /home/lily/Templates
      - /home/lily/Videos
      - /home/loretta/Music
      - /home/loretta/Pictures
      - /home/loretta/Templates
      - /home/loretta/Videos

  - name: Create directories
    tags: workstations
    ansible.builtin.file:
      path: "{{ item.dest }}"
      owner: "{{item.owner}}"
      group: "{{item.group}}"
      state: directory
      mode: '0755'
    loop:
      #- { dest: 'home/bill/Media', owner: 'bill', group: 'media' }
      # - { dest: 'home/bill/paperless', owner: 'bill', group: 'docs' }
      # - { dest: 'home/bill/paperless/media', owner: 'bill', group: 'docs' }
      # - { dest: 'home/bill/paperless/data', owner: 'bill', group: 'docs' }
      # - { dest: 'home/bill/paperless/consume', owner: 'bill', group: 'docs' }
      # - { dest: 'home/lily/Media', owner: 'lily', group: 'media' }
      # - { dest: 'home/loretta/Media', owner: 'loretta', group: 'media' }
      # - { dest: 'home/loretta/paperless', owner: 'loretta', group: 'docs' }
      # - { dest: 'home/loretta/paperless/media', owner: 'loretta', group: 'docs' }
      # - { dest: 'home/loretta/paperless/data', owner: 'loretta', group: 'docs' }
      # - { dest: 'home/loretta/paperless/consume', owner: 'loretta', group: 'docs' }
      # - { dest: 'home/bill/Media/media/tv', owner: 'bill', group: 'media' }
      # - { dest: 'home/bill/Media/media/movies', owner: 'bill', group: 'media' }

  - name: Mount NFS share directories
    tags: workstations
    ansible.posix.mount:
      src: "{{ item.src }}"
      path: "{{ item.path }}"
      opts: rw,sync
      state: mounted
      fstype: nfs
    loop:
      - { src: '192.168.86.90:/mnt/ssd-files/home/bill', path: '/home/bill' }
      - { src: '192.168.86.90:/mnt/Data/media', path: '/media' }

  - name: Copy ssh config file for bill
    ansible.builtin.copy:
      src: files/config_bill
      dest: /home/bill/.ssh/config
      owner: bill
      group: bill
      mode: '0600'

  - name: Copy known_hosts file for bill
    ansible.builtin.copy:
      src: /home/bill/.ssh/known_hosts
      dest: /home/bill/.ssh/known_hosts
      owner: bill
      group: bill
      mode: '0600'

  - name: Uncheck "Show Volumes and Devices" in Dock settings
    community.general.dconf:
      key: "/org/gnome/shell/extensions/dash-to-dock/show-volumes"
      state: present
      value: "false"
    become: false
    become_user: bill

  - name: Create script to refresh GNOME settings
    copy:
      content: |
        #!/bin/bash
        export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$(id -u)/bus
        export XDG_RUNTIME_DIR=/run/user/$(id -u)
        busctl --user call org.gnome.Shell /org/gnome/Shell org.gnome.Shell Eval s 'Meta.restart("Restartingâ€¦")'
      dest: /home/bill/refresh_gnome.sh
      owner: bill
      group: bill
      mode: '0755'

  - name: Execute script to refresh GNOME settings
    shell: su - bill -c "/home/bill/refresh_gnome.sh"
